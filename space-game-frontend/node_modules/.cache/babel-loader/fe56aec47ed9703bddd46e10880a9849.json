{"ast":null,"code":"var _jsxFileName = \"/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelInfo/PanelInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./PanelInfo.module.css\";\nimport { PowerPlantInitialProps } from \"../../../model/PowerPlant\";\nimport { EngineInitialProps } from \"../../../model/Engine\";\nimport { ShieldInitialProps } from \"../../../model/Shield\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PanelInfo = _ref => {\n  _s();\n\n  let {\n    openPanelInfoDisplay\n  } = _ref;\n  const [powerPlantProps, setPowerPlantProps] = React.useState(PowerPlantInitialProps);\n  const [engineProps, setEngineProps] = React.useState(EngineInitialProps);\n  const [shieldProps, setShieldProps] = React.useState(ShieldInitialProps);\n  const [infoPanel, setInfoPanel] = React.useState(); //     React.useEffect(() => {\n  //         console.log(openPanelInfoDisplay);\n  //         setInfoPanel(<ShieldInfo shieldProps={shieldProps} />);\n  //\n  //         if(openPanelInfoDisplay === \"powerPlantInfo\") {\n  //             setInfoPanel(<PowerPlantInfo powerPlantProps={powerPlantProps} />);\n  //         } else if(openPanelInfoDisplay === \"engineInfo\") {\n  //             setInfoPanel(<EngineInfo engineProps={engineProps} />);\n  //         } else if(openPanelInfoDisplay === \"shieldInfo\") {\n  //             setInfoPanel(<ShieldInfo shieldProps={shieldProps} />);\n  //         } else {\n  //             setInfoPanel(null);\n  //         }\n  //     });\n\n  const fetchFunctionMyTest = async () => {\n    await fetch('http://localhost:8080/ship_status').then(response => response.json()).then(data => {\n      setShieldProps(data.shieldDto);\n      setEngineProps(data.engineDto);\n      setPowerPlantProps(data.powerPlantDto);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      fetchFunctionMyTest();\n      console.log(\"test\");\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pi_container,\n    children: infoPanel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PanelInfo, \"T8QUp76mLCOv/ydJ8weuynlc5lI=\");\n\n_c = PanelInfo;\nexport default PanelInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PanelInfo\");","map":{"version":3,"sources":["/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelInfo/PanelInfo.tsx"],"names":["React","styles","PowerPlantInitialProps","EngineInitialProps","ShieldInitialProps","PanelInfo","openPanelInfoDisplay","powerPlantProps","setPowerPlantProps","useState","engineProps","setEngineProps","shieldProps","setShieldProps","infoPanel","setInfoPanel","fetchFunctionMyTest","fetch","then","response","json","data","shieldDto","engineDto","powerPlantDto","catch","err","console","log","message","useEffect","interval","setInterval","clearInterval","pi_container"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAGA,SAA0BC,sBAA1B,QAAwD,2BAAxD;AAGA,SAAsBC,kBAAtB,QAAgD,uBAAhD;AAGA,SAAsBC,kBAAtB,QAAgD,uBAAhD;;;AAMA,MAAMC,SAA0B,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAACC,IAAAA;AAAD,GAA2B;AAE3D,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,KAAK,CAACS,QAAN,CAAiCP,sBAAjC,CAA9C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAA6BN,kBAA7B,CAAtC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACS,QAAN,CAA6BL,kBAA7B,CAAtC;AAEA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4Bf,KAAK,CAACS,QAAN,EAAlC,CAN2D,CAQ/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAMO,mBAAmB,GAAG,YAAY;AACpC,UAAMC,KAAK,CAAC,mCAAD,CAAL,CACDC,IADC,CACKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEKG,IAAD,IAAU;AACZR,MAAAA,cAAc,CAACQ,IAAI,CAACC,SAAN,CAAd;AACAX,MAAAA,cAAc,CAACU,IAAI,CAACE,SAAN,CAAd;AACAf,MAAAA,kBAAkB,CAACa,IAAI,CAACG,aAAN,CAAlB;AACH,KANC,EAMCC,KAND,CAMQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KARC,CAAN;AASH,GAVD;;AAYA7B,EAAAA,KAAK,CAAC8B,SAAN,CAAgB,MAAM;AAClB,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjChB,MAAAA,mBAAmB;AACnBW,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAH2B,EAGzB,IAHyB,CAA5B;AAKA,WAAO,MAAMK,aAAa,CAACF,QAAD,CAA1B;AACH,GAPD,EAOG,EAPH;AASA,sBACI;AAAK,IAAA,SAAS,EAAE9B,MAAM,CAACiC,YAAvB;AAAA,cAEKpB;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlDD;;GAAMT,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./PanelInfo.module.css\";\n\nimport PowerPlantInfo from \"./PowerPlantInfo/PowerPlantInfo\";\nimport { PowerPlantProps, PowerPlantInitialProps } from \"../../../model/PowerPlant\";\n\nimport EngineInfo from \"./EngineInfo/EngineInfo\";\nimport { EngineProps, EngineInitialProps } from \"../../../model/Engine\";\n\nimport ShieldInfo from \"./ShieldInfo/ShieldInfo\";\nimport { ShieldProps, ShieldInitialProps } from \"../../../model/Shield\";\n\ntype Props = {\n    openPanelInfoDisplay:string\n}\n\nconst PanelInfo: React.FC<Props> = ({openPanelInfoDisplay}) => {\n\n    const [powerPlantProps, setPowerPlantProps] = React.useState<PowerPlantProps>( PowerPlantInitialProps );\n    const [engineProps, setEngineProps] = React.useState<EngineProps>( EngineInitialProps );\n    const [shieldProps, setShieldProps] = React.useState<ShieldProps>( ShieldInitialProps );\n\n    const [infoPanel, setInfoPanel] = React.useState<any>();\n\n//     React.useEffect(() => {\n//         console.log(openPanelInfoDisplay);\n//         setInfoPanel(<ShieldInfo shieldProps={shieldProps} />);\n//\n//         if(openPanelInfoDisplay === \"powerPlantInfo\") {\n//             setInfoPanel(<PowerPlantInfo powerPlantProps={powerPlantProps} />);\n//         } else if(openPanelInfoDisplay === \"engineInfo\") {\n//             setInfoPanel(<EngineInfo engineProps={engineProps} />);\n//         } else if(openPanelInfoDisplay === \"shieldInfo\") {\n//             setInfoPanel(<ShieldInfo shieldProps={shieldProps} />);\n//         } else {\n//             setInfoPanel(null);\n//         }\n//     });\n\n    const fetchFunctionMyTest = async () => {\n        await fetch('http://localhost:8080/ship_status')\n            .then((response) => response.json())\n            .then((data) => {\n                setShieldProps(data.shieldDto);\n                setEngineProps(data.engineDto);\n                setPowerPlantProps(data.powerPlantDto);\n            }).catch((err) => {\n                console.log(err.message);\n            });\n    };\n\n    React.useEffect(() => {\n        const interval = setInterval(() => {\n          fetchFunctionMyTest();\n          console.log(\"test\");\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return(\n        <div className={styles.pi_container} >\n\n            {infoPanel}\n        </div>\n    );\n}\n\nexport default PanelInfo;\n"]},"metadata":{},"sourceType":"module"}
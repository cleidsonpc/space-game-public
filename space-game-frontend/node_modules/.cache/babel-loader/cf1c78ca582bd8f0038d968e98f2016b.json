{
  "ast": null,
  "code": "var _jsxFileName = \"/home/cleidson/_dev/projects/space-game/space-game-frontend/src/pages/SpaceShipPage/SpaceShipPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./SpaceShipPage.module.css\";\nimport PanelLogMessage from \"../../components/SpaceShipParts/PanelLogMessage/PanelLogMessage\";\nimport { PowerPlantInitialProps } from \"../../model/PowerPlant\";\nimport { EngineInitialProps } from \"../../model/Engine\";\nimport { ShieldInitialProps } from \"../../model/Shield\";\nimport PanelActions from \"../../components/SpaceShipParts/PanelActions/PanelActions\";\nimport PanelInfo from \"../../components/SpaceShipParts/PanelInfo/PanelInfo\";\nimport PanelButtons from \"../../components/SpaceShipParts/PanelButtons/PanelButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpaceShipPage = () => {\n  _s();\n\n  const [logMessage, setLogMessage] = React.useState(\"\");\n  const [powerPlantProps, setPowerPlantProps] = React.useState(PowerPlantInitialProps);\n  const [engineProps, setEngineProps] = React.useState(EngineInitialProps);\n  const [shieldProps, setShieldProps] = React.useState(ShieldInitialProps);\n  const [myTest, setMyTest] = React.useState();\n\n  const buildLogMessage = async param => {\n    setLogMessage(logMessage + \" | \" + param);\n  };\n\n  async () => {\n    for (i; i < 5; i++) {\n      fetch('http://localhost:8080/ship_status').then(response => response.json()).then(data => {\n        setMyTest(data);\n      }).catch(err => {\n        console.log(err.message);\n      });\n      console.log(myTest.shieldDto);\n    }\n  };\n\n  const powerPlantOnOff = param => {\n    powerPlantProps.powerStatus = param; //         var test;\n    //         var result = fetch('http://localhost:8080/ship_status')\n    //             .then(response => response.json())\n    //             .then(data => console.log(data));\n\n    fetch('http://localhost:8080/ship_status').then(response => response.json()).then(data => {\n      setMyTest(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n    console.log(myTest.shieldDto);\n    /*\n    then((response) => response.json())\n          .then((data) => {\n             setPosts((posts) => [data, ...posts]);\n             setTitle('');\n             setBody('');\n          })\n    */\n\n    /*\n    if (response.status === 200) {\n          setPosts(\n             posts.filter((post) => {\n                return post.id !== id;\n             })\n          );\n       } else {\n          return;\n       }\n    */\n    // Export?\n\n    if (!param) {\n      engineOnOff(false);\n      shieldOnOff(false);\n    } // Export?\n\n\n    if (param) {\n      powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n    } else {\n      powerPlantProps.energyAvailable = 0;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n    buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const engineOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    }\n\n    engineProps.powerStatus = param;\n    setEngineProps(engineProps);\n    calcEngineEnergyAvailable();\n    buildLogMessage(\"Engine is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const calcEngineEnergyAvailable = () => {\n    if (engineProps.powerStatus) {\n      powerPlantProps.energyAvailable -= engineProps.powerConsumption;\n    } else if (powerPlantProps.powerStatus && !engineProps.powerStatus) {\n      powerPlantProps.energyAvailable += engineProps.powerConsumption;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n  };\n\n  const shieldOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    } // Export\n\n\n    if (param) {\n      shieldProps.capacity = 100;\n    } else {\n      shieldProps.capacity = 0;\n    }\n\n    shieldProps.powerStatus = param;\n    setShieldProps(shieldProps);\n    calcEnergyAvailable();\n    buildLogMessage(\"Shield is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const calcEnergyAvailable = () => {\n    if (shieldProps.powerStatus) {\n      powerPlantProps.energyAvailable -= shieldProps.powerConsumption;\n    } else if (powerPlantProps.powerStatus && !shieldProps.powerStatus) {\n      powerPlantProps.energyAvailable += shieldProps.powerConsumption;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n  };\n\n  const backgroundEngineOnOff = () => {\n    let result;\n\n    if (engineProps.powerStatus) {\n      result = styles.sp_backgroundEngineOn;\n    } else {\n      result = styles.sp_backgroundEngineOff;\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.sp_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_pageTitle,\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_background + \" \" + backgroundEngineOnOff(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sp_shipPanelContainer,\n        children: [engineProps.powerStatus ? \"engine ON\" : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sp_shipPanel,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelLeft,\n            children: /*#__PURE__*/_jsxDEV(PanelActions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelMiddle,\n            children: /*#__PURE__*/_jsxDEV(PanelInfo, {\n              powerPlantProps: powerPlantProps,\n              engineProps: engineProps,\n              shieldProps: shieldProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelRight,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sp_shipPainelRightUp,\n              children: /*#__PURE__*/_jsxDEV(PanelLogMessage, {\n                message: logMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sp_shipPainelRightDown,\n              children: /*#__PURE__*/_jsxDEV(PanelButtons, {\n                powerPlantProps: powerPlantProps,\n                changePowerPlant: powerPlantOnOff,\n                engineProps: engineProps,\n                changeEngine: engineOnOff,\n                shieldProps: shieldProps,\n                changeShield: shieldOnOff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_pageFooter,\n      children: \"Footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SpaceShipPage, \"4IjcxqAELRKOXEtzvl5In+OgqfY=\");\n\n_c = SpaceShipPage;\nexport default SpaceShipPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpaceShipPage\");",
  "map": {
    "version": 3,
    "sources": [
      "/home/cleidson/_dev/projects/space-game/space-game-frontend/src/pages/SpaceShipPage/SpaceShipPage.tsx"
    ],
    "names": [
      "React",
      "styles",
      "PanelLogMessage",
      "PowerPlantInitialProps",
      "EngineInitialProps",
      "ShieldInitialProps",
      "PanelActions",
      "PanelInfo",
      "PanelButtons",
      "SpaceShipPage",
      "logMessage",
      "setLogMessage",
      "useState",
      "powerPlantProps",
      "setPowerPlantProps",
      "engineProps",
      "setEngineProps",
      "shieldProps",
      "setShieldProps",
      "myTest",
      "setMyTest",
      "buildLogMessage",
      "param",
      "i",
      "fetch",
      "then",
      "response",
      "json",
      "data",
      "catch",
      "err",
      "console",
      "log",
      "message",
      "shieldDto",
      "powerPlantOnOff",
      "powerStatus",
      "engineOnOff",
      "shieldOnOff",
      "energyAvailable",
      "energyMax",
      "calcEngineEnergyAvailable",
      "powerConsumption",
      "capacity",
      "calcEnergyAvailable",
      "backgroundEngineOnOff",
      "result",
      "sp_backgroundEngineOn",
      "sp_backgroundEngineOff",
      "sp_container",
      "sp_pageTitle",
      "sp_background",
      "sp_shipPanelContainer",
      "sp_shipPanel",
      "sp_shipPainelLeft",
      "sp_shipPainelMiddle",
      "sp_shipPainelRight",
      "sp_shipPainelRightUp",
      "sp_shipPainelRightDown",
      "sp_pageFooter"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from \"react\";\nimport styles from \"./SpaceShipPage.module.css\";\n\nimport PanelLogMessage from \"../../components/SpaceShipParts/PanelLogMessage/PanelLogMessage\";\nimport { PowerPlantProps, PowerPlantInitialProps } from \"../../model/PowerPlant\";\nimport { EngineProps, EngineInitialProps } from \"../../model/Engine\";\nimport { ShieldProps, ShieldInitialProps } from \"../../model/Shield\";\nimport PanelActions from \"../../components/SpaceShipParts/PanelActions/PanelActions\";\nimport PanelInfo from \"../../components/SpaceShipParts/PanelInfo/PanelInfo\";\nimport PanelButtons from \"../../components/SpaceShipParts/PanelButtons/PanelButtons\";\n\nconst SpaceShipPage: React.FC = () => {\n    const [logMessage, setLogMessage] = React.useState<any>(\"\");\n    const [powerPlantProps, setPowerPlantProps] = React.useState<PowerPlantProps>( PowerPlantInitialProps );\n    const [engineProps, setEngineProps] = React.useState<EngineProps>( EngineInitialProps );\n    const [shieldProps, setShieldProps] = React.useState<ShieldProps>( ShieldInitialProps );\n\n    const [myTest, setMyTest] = React.useState<any>();\n\n    const buildLogMessage = async (param:string) => {\n        setLogMessage(logMessage + \" | \" + param);\n    }\n\n\n    async () => {\n        for(i; i<5; i++) {\n            fetch('http://localhost:8080/ship_status')\n                .then((response) => response.json())\n                .then((data) => {\n                    setMyTest(data);\n                }).catch((err) => {\n                    console.log(err.message);\n                });\n\n            console.log(myTest.shieldDto);\n        }\n    }\n\n\n    const powerPlantOnOff = (param:boolean) => {\n        powerPlantProps.powerStatus = param;\n\n\n//         var test;\n//         var result = fetch('http://localhost:8080/ship_status')\n//             .then(response => response.json())\n//             .then(data => console.log(data));\n\n\n        fetch('http://localhost:8080/ship_status')\n            .then((response) => response.json())\n            .then((data) => {\n                setMyTest(data);\n            }).catch((err) => {\n                console.log(err.message);\n            });\n\n        console.log(myTest.shieldDto);\n\n\n        /*\n        then((response) => response.json())\n              .then((data) => {\n                 setPosts((posts) => [data, ...posts]);\n                 setTitle('');\n                 setBody('');\n              })\n        */\n\n        /*\n        if (response.status === 200) {\n              setPosts(\n                 posts.filter((post) => {\n                    return post.id !== id;\n                 })\n              );\n           } else {\n              return;\n           }\n        */\n\n\n        // Export?\n        if(!param) {\n            engineOnOff(false);\n            shieldOnOff(false);\n        }\n\n        // Export?\n        if(param) {\n            powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n        } else {\n            powerPlantProps.energyAvailable = 0;\n        }\n\n        setPowerPlantProps(powerPlantProps);\n\n        buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n    }\n\n    const engineOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n\n        engineProps.powerStatus = param;\n        setEngineProps(engineProps);\n\n        calcEngineEnergyAvailable();\n\n        buildLogMessage(\"Engine is: \" + (param?\"ON\":\"OFF\"));\n    }\n\n    const calcEngineEnergyAvailable = () => {\n        if(engineProps.powerStatus) {\n            powerPlantProps.energyAvailable -= engineProps.powerConsumption;\n        } else if(powerPlantProps.powerStatus && !engineProps.powerStatus) {\n            powerPlantProps.energyAvailable += engineProps.powerConsumption;\n        }\n        setPowerPlantProps(powerPlantProps);\n    }\n\n    const shieldOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n\n        // Export\n        if(param) {\n            shieldProps.capacity = 100;\n        } else {\n            shieldProps.capacity = 0;\n        }\n\n        shieldProps.powerStatus = param;\n        setShieldProps(shieldProps);\n\n        calcEnergyAvailable();\n\n        buildLogMessage(\"Shield is: \" + (param?\"ON\":\"OFF\"));\n    }\n\n    const calcEnergyAvailable = () => {\n        if(shieldProps.powerStatus) {\n            powerPlantProps.energyAvailable -= shieldProps.powerConsumption;\n        } else if(powerPlantProps.powerStatus && !shieldProps.powerStatus) {\n            powerPlantProps.energyAvailable += shieldProps.powerConsumption;\n        }\n        setPowerPlantProps(powerPlantProps);\n    }\n\n    const backgroundEngineOnOff = () => {\n        let result;\n\n        if(engineProps.powerStatus) {\n            result = styles.sp_backgroundEngineOn;\n        } else {\n            result = styles.sp_backgroundEngineOff;\n        }\n\n        return result;\n    }\n\n    return(\n        <div className={styles.sp_container}>\n            <div className={styles.sp_pageTitle} >Title</div>\n\n            <div className={styles.sp_background + \" \" + backgroundEngineOnOff()} >\n                <div className={styles.sp_shipPanelContainer} >\n                    { engineProps.powerStatus ? \"engine ON\" : \"\" }\n\n                    <div className={styles.sp_shipPanel} >\n                        <div className={styles.sp_shipPainelLeft} >\n                            <PanelActions />\n                        </div>\n\n                        <div className={styles.sp_shipPainelMiddle} >\n                            <PanelInfo \n                                powerPlantProps={powerPlantProps}\n                                engineProps={engineProps}\n                                shieldProps={shieldProps} />\n                        </div>\n\n                        <div className={styles.sp_shipPainelRight} >\n                            <div className={styles.sp_shipPainelRightUp} >\n                                <PanelLogMessage message={logMessage} />\n                            </div>\n\n                            <div className={styles.sp_shipPainelRightDown} >\n                                <PanelButtons\n                                    powerPlantProps={powerPlantProps}\n                                    changePowerPlant={powerPlantOnOff}\n                                    \n                                    engineProps={engineProps}\n                                    changeEngine={engineOnOff}\n                                    \n                                    shieldProps={shieldProps}\n                                    changeShield={shieldOnOff} />\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div className={styles.sp_pageFooter} >\n                Footer\n            </div>\n        </div>\n    );\n};\n\nexport default SpaceShipPage;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
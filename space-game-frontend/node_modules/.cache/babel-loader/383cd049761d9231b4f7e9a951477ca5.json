{"ast":null,"code":"var _jsxFileName = \"/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelShipStatus/PanelShipStatus.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./PanelShipStatus.module.css\";\nimport { PowerPlantInitialProps } from \"../../../model/PowerPlant\";\nimport { EngineInitialProps } from \"../../../model/Engine\";\nimport { ShieldInitialProps } from \"../../../model/Shield\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogMessage = () => {\n  _s();\n\n  const [powerPlantProps, setPowerPlantProps] = React.useState(PowerPlantInitialProps);\n  const [engineProps, setEngineProps] = React.useState(EngineInitialProps);\n  const [shieldProps, setShieldProps] = React.useState(ShieldInitialProps); //     const [shield, setShield] = React.userState<any>();\n  //     const [shield, setShield] = React.userState<any>();\n  //     const [shield, setShield] = React.userState<any>();\n\n  React.useEffect(() => {//         const fetchMyTest = async() => {\n    //             const response = await fetch('http://localhost:8080/ship_status');\n    //             const json = await response.json();\n    //             setMyTest(json);\n    //         };\n    //         const intervalId = setInterval(() => {\n    //             setMyTest(myTest + 1);\n    //         }, 2000);\n    //         return () => clearInterval(intervalId);\n  }, []);\n\n  const fetchFunctionMyTest = async () => {\n    await fetch('http://localhost:8080/ship_status').then(response => response.json()).then(data => {\n      setShieldProps(data.shieldDto);\n      console.log(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  setInterval(() => {\n    fetchFunctionMyTest();\n  }, 5000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.lm_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Log Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.lm_message,\n      children: [\"Count MyTest: \", shieldProps.powerStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogMessage, \"hSUj08qZEQDB0BWwAIam444aURs=\");\n\n_c = LogMessage;\nexport default LogMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogMessage\");","map":{"version":3,"sources":["/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelShipStatus/PanelShipStatus.tsx"],"names":["React","styles","PowerPlantInitialProps","EngineInitialProps","ShieldInitialProps","LogMessage","powerPlantProps","setPowerPlantProps","useState","engineProps","setEngineProps","shieldProps","setShieldProps","useEffect","fetchFunctionMyTest","fetch","then","response","json","data","shieldDto","console","log","catch","err","message","setInterval","lm_container","lm_message","powerStatus"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,SAA0BC,sBAA1B,QAAwD,2BAAxD;AACA,SAAsBC,kBAAtB,QAAgD,uBAAhD;AACA,SAAsBC,kBAAtB,QAAgD,uBAAhD;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,KAAK,CAACQ,QAAN,CAAiCN,sBAAjC,CAA9C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACQ,QAAN,CAA6BL,kBAA7B,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACQ,QAAN,CAA6BJ,kBAA7B,CAAtC,CAJ+B,CAMnC;AACA;AACA;;AAEIJ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM,CAC1B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEK,GAZD,EAYG,EAZH;;AAcA,QAAMC,mBAAmB,GAAG,YAAY;AACpC,UAAMC,KAAK,CAAC,mCAAD,CAAL,CACDC,IADC,CACKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEKG,IAAD,IAAU;AACZP,MAAAA,cAAc,CAACO,IAAI,CAACC,SAAN,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KALC,EAKCI,KALD,CAKQC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACH,KAPC,CAAN;AAQH,GATD;;AAWAC,EAAAA,WAAW,CAAC,MAAM;AACdZ,IAAAA,mBAAmB;AACtB,GAFU,EAER,IAFQ,CAAX;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEb,MAAM,CAAC0B,YAAvB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,UAAvB;AAAA,mCAAkDjB,WAAW,CAACkB,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA7CD;;GAAMxB,U;;KAAAA,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./PanelShipStatus.module.css\";\n\nimport { PowerPlantProps, PowerPlantInitialProps } from \"../../../model/PowerPlant\";\nimport { EngineProps, EngineInitialProps } from \"../../../model/Engine\";\nimport { ShieldProps, ShieldInitialProps } from \"../../../model/Shield\";\n\nconst LogMessage: React.FC = () => {\n\n    const [powerPlantProps, setPowerPlantProps] = React.useState<PowerPlantProps>( PowerPlantInitialProps );\n    const [engineProps, setEngineProps] = React.useState<EngineProps>( EngineInitialProps );\n    const [shieldProps, setShieldProps] = React.useState<ShieldProps>( ShieldInitialProps );\n\n//     const [shield, setShield] = React.userState<any>();\n//     const [shield, setShield] = React.userState<any>();\n//     const [shield, setShield] = React.userState<any>();\n\n    React.useEffect(() => {\n//         const fetchMyTest = async() => {\n//             const response = await fetch('http://localhost:8080/ship_status');\n//             const json = await response.json();\n//             setMyTest(json);\n//         };\n\n//         const intervalId = setInterval(() => {\n//             setMyTest(myTest + 1);\n//         }, 2000);\n//         return () => clearInterval(intervalId);\n\n    }, []);\n\n    const fetchFunctionMyTest = async () => {\n        await fetch('http://localhost:8080/ship_status')\n            .then((response) => response.json())\n            .then((data) => {\n                setShieldProps(data.shieldDto);\n                console.log(data);\n            }).catch((err) => {\n                console.log(err.message);\n            });\n    };\n\n    setInterval(() => {\n        fetchFunctionMyTest();\n    }, 5000);\n\n    return (\n        <div className={styles.lm_container} >\n            <div>Log Message</div>\n            <div className={styles.lm_message}>Count MyTest: {shieldProps.powerStatus}</div>\n        </div>\n    );\n}\n\nexport default LogMessage;\n"]},"metadata":{},"sourceType":"module"}
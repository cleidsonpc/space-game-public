{"ast":null,"code":"var _jsxFileName = \"/home/cleidson/_dev/projects/space-game/space-game-frontend/src/pages/SpaceShipPage/SpaceShipPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./SpaceShipPage.module.css\";\nimport PanelLogMessage from \"../../components/SpaceShipParts/PanelLogMessage/PanelLogMessage\";\nimport { PowerPlantInitialProps } from \"../../model/PowerPlant\";\nimport { EngineInitialProps } from \"../../model/Engine\";\nimport { ShieldInitialProps } from \"../../model/Shield\";\nimport PanelActions from \"../../components/SpaceShipParts/PanelActions/PanelActions\";\nimport PanelInfo from \"../../components/SpaceShipParts/PanelInfo/PanelInfo\";\nimport PanelButtons from \"../../components/SpaceShipParts/PanelButtons/PanelButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpaceShipPage = () => {\n  _s();\n\n  const [logMessage, setLogMessage] = React.useState(\"\");\n  const [powerPlantProps, setPowerPlantProps] = React.useState(PowerPlantInitialProps);\n  const [engineProps, setEngineProps] = React.useState(EngineInitialProps);\n  const [shieldProps, setShieldProps] = React.useState(ShieldInitialProps);\n  const [openPanelInfoDisplay, setOpenPanelInfoDisplay] = React.useState(\"\");\n\n  const buildLogMessage = async param => {\n    setLogMessage(logMessage + \" | \" + param); //TODO Just Test\n\n    setOpenPanelInfoDisplay(\"shieldInfo\");\n  };\n\n  React.useEffect(() => {\n    console.log(\"CPC: useEffect called on SpaceShipPage\");\n  });\n\n  const powerPlantOnOff = param => {\n    powerPlantProps.powerStatus = param; //         then((response) => response.json())\n    //               .then((data) => {\n    //                  setPosts((posts) => [data, ...posts]);\n    //                  setTitle('');\n    //                  setBody('');\n    //               })\n    //         if (response.status === 200) {\n    //           setPosts(\n    //              posts.filter((post) => {\n    //                 return post.id !== id;\n    //              })\n    //           );\n    //        } else {\n    //           return;\n    //        }\n    //\n    // Export?\n\n    if (!param) {\n      engineOnOff(false);\n      shieldOnOff(false);\n    } // Export?\n\n\n    if (param) {\n      powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n    } else {\n      powerPlantProps.energyAvailable = 0;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n    buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const engineOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    }\n\n    engineProps.powerStatus = param;\n    setEngineProps(engineProps);\n    calcEngineEnergyAvailable();\n    buildLogMessage(\"Engine is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const calcEngineEnergyAvailable = () => {\n    if (engineProps.powerStatus) {\n      powerPlantProps.energyAvailable -= engineProps.powerConsumption;\n    } else if (powerPlantProps.powerStatus && !engineProps.powerStatus) {\n      powerPlantProps.energyAvailable += engineProps.powerConsumption;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n  };\n\n  const shieldOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    } // Export\n\n\n    if (param) {\n      shieldProps.capacity = 100;\n    } else {\n      shieldProps.capacity = 0;\n    }\n\n    shieldProps.powerStatus = param;\n    setShieldProps(shieldProps);\n    calcEnergyAvailable();\n    buildLogMessage(\"Shield is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const calcEnergyAvailable = () => {\n    if (shieldProps.powerStatus) {\n      powerPlantProps.energyAvailable -= shieldProps.powerConsumption;\n    } else if (powerPlantProps.powerStatus && !shieldProps.powerStatus) {\n      powerPlantProps.energyAvailable += shieldProps.powerConsumption;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n  };\n\n  const backgroundEngineOnOff = () => {\n    let result;\n\n    if (engineProps.powerStatus) {\n      result = styles.sp_backgroundEngineOn;\n    } else {\n      result = styles.sp_backgroundEngineOff;\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.sp_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_pageTitle,\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_background + \" \" + backgroundEngineOnOff(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sp_shipPanelContainer,\n        children: [engineProps.powerStatus ? \"engine ON\" : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sp_shipPanel,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelLeft,\n            children: /*#__PURE__*/_jsxDEV(PanelActions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelMiddle,\n            children: /*#__PURE__*/_jsxDEV(PanelInfo, {\n              openPanelInfoDisplay: openPanelInfoDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelRight,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sp_shipPainelRightUp,\n              children: /*#__PURE__*/_jsxDEV(PanelLogMessage, {\n                message: logMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sp_shipPainelRightDown,\n              children: /*#__PURE__*/_jsxDEV(PanelButtons, {\n                powerPlantProps: powerPlantProps,\n                changePowerPlant: powerPlantOnOff,\n                engineProps: engineProps,\n                changeEngine: engineOnOff,\n                shieldProps: shieldProps,\n                changeShield: shieldOnOff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_pageFooter,\n      children: \"Footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SpaceShipPage, \"uySQXzHmIPRm7EyDfSxlxWVPNhg=\");\n\n_c = SpaceShipPage;\nexport default SpaceShipPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpaceShipPage\");","map":{"version":3,"sources":["/home/cleidson/_dev/projects/space-game/space-game-frontend/src/pages/SpaceShipPage/SpaceShipPage.tsx"],"names":["React","styles","PanelLogMessage","PowerPlantInitialProps","EngineInitialProps","ShieldInitialProps","PanelActions","PanelInfo","PanelButtons","SpaceShipPage","logMessage","setLogMessage","useState","powerPlantProps","setPowerPlantProps","engineProps","setEngineProps","shieldProps","setShieldProps","openPanelInfoDisplay","setOpenPanelInfoDisplay","buildLogMessage","param","useEffect","console","log","powerPlantOnOff","powerStatus","engineOnOff","shieldOnOff","energyAvailable","energyMax","calcEngineEnergyAvailable","powerConsumption","capacity","calcEnergyAvailable","backgroundEngineOnOff","result","sp_backgroundEngineOn","sp_backgroundEngineOff","sp_container","sp_pageTitle","sp_background","sp_shipPanelContainer","sp_shipPanel","sp_shipPainelLeft","sp_shipPainelMiddle","sp_shipPainelRight","sp_shipPainelRightUp","sp_shipPainelRightDown","sp_pageFooter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./SpaceShipPage.module.css\";\n\nimport PanelLogMessage from \"../../components/SpaceShipParts/PanelLogMessage/PanelLogMessage\";\n\nimport { PowerPlantProps, PowerPlantInitialProps } from \"../../model/PowerPlant\";\nimport { EngineProps, EngineInitialProps } from \"../../model/Engine\";\nimport { ShieldProps, ShieldInitialProps } from \"../../model/Shield\";\nimport PanelActions from \"../../components/SpaceShipParts/PanelActions/PanelActions\";\nimport PanelInfo from \"../../components/SpaceShipParts/PanelInfo/PanelInfo\";\nimport PanelButtons from \"../../components/SpaceShipParts/PanelButtons/PanelButtons\";\n\nconst SpaceShipPage: React.FC = () => {\n    const [logMessage, setLogMessage] = React.useState<any>(\"\");\n    const [powerPlantProps, setPowerPlantProps] = React.useState<PowerPlantProps>( PowerPlantInitialProps );\n    const [engineProps, setEngineProps] = React.useState<EngineProps>( EngineInitialProps );\n    const [shieldProps, setShieldProps] = React.useState<ShieldProps>( ShieldInitialProps );\n\n    const [openPanelInfoDisplay, setOpenPanelInfoDisplay] = React.useState<string>(\"\");\n\n    const buildLogMessage = async (param:string) => {\n        setLogMessage(logMessage + \" | \" + param);\n\n        //TODO Just Test\n        setOpenPanelInfoDisplay(\"shieldInfo\");\n    }\n\n    React.useEffect(() => {\n        console.log(\"CPC: useEffect called on SpaceShipPage\");\n    });\n\n    const powerPlantOnOff = (param:boolean) => {\n        powerPlantProps.powerStatus = param;\n\n//         then((response) => response.json())\n//               .then((data) => {\n//                  setPosts((posts) => [data, ...posts]);\n//                  setTitle('');\n//                  setBody('');\n//               })\n\n//         if (response.status === 200) {\n//           setPosts(\n//              posts.filter((post) => {\n//                 return post.id !== id;\n//              })\n//           );\n//        } else {\n//           return;\n//        }\n//\n\n        // Export?\n        if(!param) {\n            engineOnOff(false);\n            shieldOnOff(false);\n        }\n\n        // Export?\n        if(param) {\n            powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n        } else {\n            powerPlantProps.energyAvailable = 0;\n        }\n\n        setPowerPlantProps(powerPlantProps);\n\n        buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n    }\n\n    const engineOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n\n        engineProps.powerStatus = param;\n        setEngineProps(engineProps);\n\n        calcEngineEnergyAvailable();\n\n        buildLogMessage(\"Engine is: \" + (param?\"ON\":\"OFF\"));\n    }\n\n    const calcEngineEnergyAvailable = () => {\n        if(engineProps.powerStatus) {\n            powerPlantProps.energyAvailable -= engineProps.powerConsumption;\n        } else if(powerPlantProps.powerStatus && !engineProps.powerStatus) {\n            powerPlantProps.energyAvailable += engineProps.powerConsumption;\n        }\n        setPowerPlantProps(powerPlantProps);\n    }\n\n    const shieldOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n\n        // Export\n        if(param) {\n            shieldProps.capacity = 100;\n        } else {\n            shieldProps.capacity = 0;\n        }\n\n        shieldProps.powerStatus = param;\n        setShieldProps(shieldProps);\n\n        calcEnergyAvailable();\n\n        buildLogMessage(\"Shield is: \" + (param?\"ON\":\"OFF\"));\n    }\n\n    const calcEnergyAvailable = () => {\n        if(shieldProps.powerStatus) {\n            powerPlantProps.energyAvailable -= shieldProps.powerConsumption;\n        } else if(powerPlantProps.powerStatus && !shieldProps.powerStatus) {\n            powerPlantProps.energyAvailable += shieldProps.powerConsumption;\n        }\n        setPowerPlantProps(powerPlantProps);\n    }\n\n    const backgroundEngineOnOff = () => {\n        let result;\n\n        if(engineProps.powerStatus) {\n            result = styles.sp_backgroundEngineOn;\n        } else {\n            result = styles.sp_backgroundEngineOff;\n        }\n\n        return result;\n    }\n\n    return(\n        <div className={styles.sp_container}>\n            <div className={styles.sp_pageTitle} >Title</div>\n\n            <div className={styles.sp_background + \" \" + backgroundEngineOnOff()} >\n                <div className={styles.sp_shipPanelContainer} >\n                    { engineProps.powerStatus ? \"engine ON\" : \"\" }\n\n                    <div className={styles.sp_shipPanel} >\n                        <div className={styles.sp_shipPainelLeft} >\n                            <PanelActions/>\n                        </div>\n\n                        <div className={styles.sp_shipPainelMiddle} >\n                            <PanelInfo openPanelInfoDisplay={openPanelInfoDisplay}/>\n                        </div>\n\n                        <div className={styles.sp_shipPainelRight} >\n                            <div className={styles.sp_shipPainelRightUp} >\n                                <PanelLogMessage message={logMessage} />\n                            </div>\n\n                            <div className={styles.sp_shipPainelRightDown} >\n                                <PanelButtons\n                                    powerPlantProps={powerPlantProps}\n                                    changePowerPlant={powerPlantOnOff}\n\n                                    engineProps={engineProps}\n                                    changeEngine={engineOnOff}\n\n                                    shieldProps={shieldProps}\n                                    changeShield={shieldOnOff} />\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div className={styles.sp_pageFooter} >\n                Footer\n            </div>\n        </div>\n    );\n};\n\nexport default SpaceShipPage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelShipStatus/PanelShipStatus.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./PanelShipStatus.module.css\";\nimport { PowerPlantInitialProps } from \"../../../model/PowerPlant\";\nimport { EngineInitialProps } from \"../../../model/Engine\";\nimport { ShieldInitialProps } from \"../../../model/Shield\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogMessage = () => {\n  _s();\n\n  const [powerPlantProps, setPowerPlantProps] = React.useState(PowerPlantInitialProps);\n  const [engineProps, setEngineProps] = React.useState(EngineInitialProps);\n  const [shieldProps, setShieldProps] = React.useState(ShieldInitialProps);\n\n  const fetchFunctionMyTest = async () => {\n    await fetch('http://localhost:8080/ship_status').then(response => response.json()).then(data => {\n      setShieldProps(data.shieldDto); //console.log(data.shieldDto);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      fetchFunctionMyTest();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.lm_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.lm_message,\n      children: [\"Shield Status:\", shieldProps.powerStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.lm_message,\n      children: [\"Powerplant Status:\", shieldProps.capacity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.lm_message,\n      children: [\"Engine Status:\", shieldProps.powerConsumption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogMessage, \"hSUj08qZEQDB0BWwAIam444aURs=\");\n\n_c = LogMessage;\nexport default LogMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogMessage\");","map":{"version":3,"sources":["/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelShipStatus/PanelShipStatus.tsx"],"names":["React","styles","PowerPlantInitialProps","EngineInitialProps","ShieldInitialProps","LogMessage","powerPlantProps","setPowerPlantProps","useState","engineProps","setEngineProps","shieldProps","setShieldProps","fetchFunctionMyTest","fetch","then","response","json","data","shieldDto","catch","err","console","log","message","useEffect","interval","setInterval","clearInterval","lm_container","lm_message","powerStatus","capacity","powerConsumption"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,SAA0BC,sBAA1B,QAAwD,2BAAxD;AACA,SAAsBC,kBAAtB,QAAgD,uBAAhD;AACA,SAAsBC,kBAAtB,QAAgD,uBAAhD;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,KAAK,CAACQ,QAAN,CAAiCN,sBAAjC,CAA9C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACQ,QAAN,CAA6BL,kBAA7B,CAAtC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACQ,QAAN,CAA6BJ,kBAA7B,CAAtC;;AAEA,QAAMS,mBAAmB,GAAG,YAAY;AACpC,UAAMC,KAAK,CAAC,mCAAD,CAAL,CACDC,IADC,CACKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADlB,EAEDF,IAFC,CAEKG,IAAD,IAAU;AACZN,MAAAA,cAAc,CAACM,IAAI,CAACC,SAAN,CAAd,CADY,CAEZ;AACH,KALC,EAKCC,KALD,CAKQC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KAPC,CAAN;AAQH,GATD;;AAWAxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AAClB,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCd,MAAAA,mBAAmB;AACpB,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMe,aAAa,CAACF,QAAD,CAA1B;AACD,GALH,EAKK,EALL;AAOA,sBACI;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC4B,YAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,UAAvB;AAAA,mCACKnB,WAAW,CAACoB,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAE9B,MAAM,CAAC6B,UAAvB;AAAA,uCACKnB,WAAW,CAACqB,QADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAK,MAAA,SAAS,EAAE/B,MAAM,CAAC6B,UAAvB;AAAA,mCACKnB,WAAW,CAACsB,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApCD;;GAAM5B,U;;KAAAA,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./PanelShipStatus.module.css\";\n\nimport { PowerPlantProps, PowerPlantInitialProps } from \"../../../model/PowerPlant\";\nimport { EngineProps, EngineInitialProps } from \"../../../model/Engine\";\nimport { ShieldProps, ShieldInitialProps } from \"../../../model/Shield\";\n\nconst LogMessage: React.FC = () => {\n    const [powerPlantProps, setPowerPlantProps] = React.useState<PowerPlantProps>( PowerPlantInitialProps );\n    const [engineProps, setEngineProps] = React.useState<EngineProps>( EngineInitialProps );\n    const [shieldProps, setShieldProps] = React.useState<ShieldProps>( ShieldInitialProps );\n\n    const fetchFunctionMyTest = async () => {\n        await fetch('http://localhost:8080/ship_status')\n            .then((response) => response.json())\n            .then((data) => {\n                setShieldProps(data.shieldDto);\n                //console.log(data.shieldDto);\n            }).catch((err) => {\n                console.log(err.message);\n            });\n    };\n\n    React.useEffect(() => {\n        const interval = setInterval(() => {\n          fetchFunctionMyTest();\n        }, 1000);\n        return () => clearInterval(interval);\n      }, []);\n\n    return (\n        <div className={styles.lm_container} >\n            <div className={styles.lm_message}>Shield Status:\n                {shieldProps.powerStatus}\n            </div>\n            <div className={styles.lm_message}>Powerplant Status:\n                {shieldProps.capacity}\n            </div>\n            <div className={styles.lm_message}>Engine Status:\n                {shieldProps.powerConsumption}\n            </div>\n        </div>\n    );\n}\n\nexport default LogMessage;\n"]},"metadata":{},"sourceType":"module"}
{
  "ast": null,
  "code": "var _jsxFileName = \"/home/cleidson/_dev/projects/space-game/space-game-frontend/src/pages/SpaceShipPage/SpaceShipPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./SpaceShipPage.module.css\";\nimport PanelLogMessage from \"../../components/SpaceShipParts/PanelLogMessage/PanelLogMessage\";\nimport { PowerPlantInitialProps } from \"../../model/PowerPlant\";\nimport { EngineInitialProps } from \"../../model/Engine\";\nimport { ShieldInitialProps } from \"../../model/Shield\";\nimport PanelActions from \"../../components/SpaceShipParts/PanelActions/PanelActions\";\nimport PanelInfo from \"../../components/SpaceShipParts/PanelInfo/PanelInfo\";\nimport PanelButtons from \"../../components/SpaceShipParts/PanelButtons/PanelButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SpaceShipPage = () => {\n  _s();\n\n  const [logMessage, setLogMessage] = React.useState(\"\");\n  const [powerPlantProps, setPowerPlantProps] = React.useState(PowerPlantInitialProps);\n  const [engineProps, setEngineProps] = React.useState(EngineInitialProps);\n  const [shieldProps, setShieldProps] = React.useState(ShieldInitialProps);\n\n  const buildLogMessage = async param => {\n    setLogMessage(logMessage + \" | \" + param);\n  };\n\n  const powerPlantOnOff = param => {\n    powerPlantProps.powerStatus = param;\n    var test;\n    var result = fetch('http://localhost:8080/ship_status').then(response => response.json()); //            .then(data => console.log(data));\n    //             .then(data => this.setState({clients: data}));\n\n    console.log(result); // Export?\n\n    if (!param) {\n      engineOnOff(false);\n      shieldOnOff(false);\n    } // Export?\n\n\n    if (param) {\n      powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n    } else {\n      powerPlantProps.energyAvailable = 0;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n    buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const engineOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    }\n\n    engineProps.powerStatus = param;\n    setEngineProps(engineProps);\n    calcEngineEnergyAvailable();\n    buildLogMessage(\"Engine is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const calcEngineEnergyAvailable = () => {\n    if (engineProps.powerStatus) {\n      powerPlantProps.energyAvailable -= engineProps.powerConsumption;\n    } else if (powerPlantProps.powerStatus && !engineProps.powerStatus) {\n      powerPlantProps.energyAvailable += engineProps.powerConsumption;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n  };\n\n  const shieldOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    } // Export\n\n\n    if (param) {\n      shieldProps.capacity = 100;\n    } else {\n      shieldProps.capacity = 0;\n    }\n\n    shieldProps.powerStatus = param;\n    setShieldProps(shieldProps);\n    calcEnergyAvailable();\n    buildLogMessage(\"Shield is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const calcEnergyAvailable = () => {\n    if (shieldProps.powerStatus) {\n      powerPlantProps.energyAvailable -= shieldProps.powerConsumption;\n    } else if (powerPlantProps.powerStatus && !shieldProps.powerStatus) {\n      powerPlantProps.energyAvailable += shieldProps.powerConsumption;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n  };\n\n  const backgroundEngineOnOff = () => {\n    let result;\n\n    if (engineProps.powerStatus) {\n      result = styles.sp_backgroundEngineOn;\n    } else {\n      result = styles.sp_backgroundEngineOff;\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.sp_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_pageTitle,\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_background + \" \" + backgroundEngineOnOff(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sp_shipPanelContainer,\n        children: [engineProps.powerStatus ? \"engine ON\" : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sp_shipPanel,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelLeft,\n            children: /*#__PURE__*/_jsxDEV(PanelActions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelMiddle,\n            children: /*#__PURE__*/_jsxDEV(PanelInfo, {\n              powerPlantProps: powerPlantProps,\n              engineProps: engineProps,\n              shieldProps: shieldProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.sp_shipPainelRight,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sp_shipPainelRightUp,\n              children: /*#__PURE__*/_jsxDEV(PanelLogMessage, {\n                message: logMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.sp_shipPainelRightDown,\n              children: /*#__PURE__*/_jsxDEV(PanelButtons, {\n                powerPlantProps: powerPlantProps,\n                changePowerPlant: powerPlantOnOff,\n                engineProps: engineProps,\n                changeEngine: engineOnOff,\n                shieldProps: shieldProps,\n                changeShield: shieldOnOff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sp_pageFooter,\n      children: \"Footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SpaceShipPage, \"+wiP834bH+00pocaNhuubWHLFZY=\");\n\n_c = SpaceShipPage;\nexport default SpaceShipPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpaceShipPage\");",
  "map": {
    "version": 3,
    "sources": [
      "/home/cleidson/_dev/projects/space-game/space-game-frontend/src/pages/SpaceShipPage/SpaceShipPage.tsx"
    ],
    "names": [
      "React",
      "styles",
      "PanelLogMessage",
      "PowerPlantInitialProps",
      "EngineInitialProps",
      "ShieldInitialProps",
      "PanelActions",
      "PanelInfo",
      "PanelButtons",
      "SpaceShipPage",
      "logMessage",
      "setLogMessage",
      "useState",
      "powerPlantProps",
      "setPowerPlantProps",
      "engineProps",
      "setEngineProps",
      "shieldProps",
      "setShieldProps",
      "buildLogMessage",
      "param",
      "powerPlantOnOff",
      "powerStatus",
      "test",
      "result",
      "fetch",
      "then",
      "response",
      "json",
      "console",
      "log",
      "engineOnOff",
      "shieldOnOff",
      "energyAvailable",
      "energyMax",
      "calcEngineEnergyAvailable",
      "powerConsumption",
      "capacity",
      "calcEnergyAvailable",
      "backgroundEngineOnOff",
      "sp_backgroundEngineOn",
      "sp_backgroundEngineOff",
      "sp_container",
      "sp_pageTitle",
      "sp_background",
      "sp_shipPanelContainer",
      "sp_shipPanel",
      "sp_shipPainelLeft",
      "sp_shipPainelMiddle",
      "sp_shipPainelRight",
      "sp_shipPainelRightUp",
      "sp_shipPainelRightDown",
      "sp_pageFooter"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from \"react\";\nimport styles from \"./SpaceShipPage.module.css\";\n\nimport PanelLogMessage from \"../../components/SpaceShipParts/PanelLogMessage/PanelLogMessage\";\nimport { PowerPlantProps, PowerPlantInitialProps } from \"../../model/PowerPlant\";\nimport { EngineProps, EngineInitialProps } from \"../../model/Engine\";\nimport { ShieldProps, ShieldInitialProps } from \"../../model/Shield\";\nimport PanelActions from \"../../components/SpaceShipParts/PanelActions/PanelActions\";\nimport PanelInfo from \"../../components/SpaceShipParts/PanelInfo/PanelInfo\";\nimport PanelButtons from \"../../components/SpaceShipParts/PanelButtons/PanelButtons\";\n\nconst SpaceShipPage: React.FC = () => {\n    const [logMessage, setLogMessage] = React.useState<any>(\"\");\n    const [powerPlantProps, setPowerPlantProps] = React.useState<PowerPlantProps>( PowerPlantInitialProps );\n    const [engineProps, setEngineProps] = React.useState<EngineProps>( EngineInitialProps );\n    const [shieldProps, setShieldProps] = React.useState<ShieldProps>( ShieldInitialProps );\n\n    const buildLogMessage = async (param:string) => {\n        setLogMessage(logMessage + \" | \" + param);\n    }\n\n    const powerPlantOnOff = (param:boolean) => {\n        powerPlantProps.powerStatus = param;\n\n\n        var test;\n        var result = fetch('http://localhost:8080/ship_status')\n            .then(response => response.json())\n//            .then(data => console.log(data));\n//             .then(data => this.setState({clients: data}));\n\n        console.log(result);\n\n\n        // Export?\n        if(!param) {\n            engineOnOff(false);\n            shieldOnOff(false);\n        }\n\n        // Export?\n        if(param) {\n            powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n        } else {\n            powerPlantProps.energyAvailable = 0;\n        }\n\n        setPowerPlantProps(powerPlantProps);\n\n        buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n    }\n\n    const engineOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n\n        engineProps.powerStatus = param;\n        setEngineProps(engineProps);\n\n        calcEngineEnergyAvailable();\n\n        buildLogMessage(\"Engine is: \" + (param?\"ON\":\"OFF\"));\n    }\n\n    const calcEngineEnergyAvailable = () => {\n        if(engineProps.powerStatus) {\n            powerPlantProps.energyAvailable -= engineProps.powerConsumption;\n        } else if(powerPlantProps.powerStatus && !engineProps.powerStatus) {\n            powerPlantProps.energyAvailable += engineProps.powerConsumption;\n        }\n        setPowerPlantProps(powerPlantProps);\n    }\n\n    const shieldOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n\n        // Export\n        if(param) {\n            shieldProps.capacity = 100;\n        } else {\n            shieldProps.capacity = 0;\n        }\n\n        shieldProps.powerStatus = param;\n        setShieldProps(shieldProps);\n\n        calcEnergyAvailable();\n\n        buildLogMessage(\"Shield is: \" + (param?\"ON\":\"OFF\"));\n    }\n\n    const calcEnergyAvailable = () => {\n        if(shieldProps.powerStatus) {\n            powerPlantProps.energyAvailable -= shieldProps.powerConsumption;\n        } else if(powerPlantProps.powerStatus && !shieldProps.powerStatus) {\n            powerPlantProps.energyAvailable += shieldProps.powerConsumption;\n        }\n        setPowerPlantProps(powerPlantProps);\n    }\n\n    const backgroundEngineOnOff = () => {\n        let result;\n\n        if(engineProps.powerStatus) {\n            result = styles.sp_backgroundEngineOn;\n        } else {\n            result = styles.sp_backgroundEngineOff;\n        }\n\n        return result;\n    }\n\n    return(\n        <div className={styles.sp_container}>\n            <div className={styles.sp_pageTitle} >Title</div>\n\n            <div className={styles.sp_background + \" \" + backgroundEngineOnOff()} >\n                <div className={styles.sp_shipPanelContainer} >\n                    { engineProps.powerStatus ? \"engine ON\" : \"\" }\n\n                    <div className={styles.sp_shipPanel} >\n                        <div className={styles.sp_shipPainelLeft} >\n                            <PanelActions />\n                        </div>\n\n                        <div className={styles.sp_shipPainelMiddle} >\n                            <PanelInfo \n                                powerPlantProps={powerPlantProps}\n                                engineProps={engineProps}\n                                shieldProps={shieldProps} />\n                        </div>\n\n                        <div className={styles.sp_shipPainelRight} >\n                            <div className={styles.sp_shipPainelRightUp} >\n                                <PanelLogMessage message={logMessage} />\n                            </div>\n\n                            <div className={styles.sp_shipPainelRightDown} >\n                                <PanelButtons\n                                    powerPlantProps={powerPlantProps}\n                                    changePowerPlant={powerPlantOnOff}\n                                    \n                                    engineProps={engineProps}\n                                    changeEngine={engineOnOff}\n                                    \n                                    shieldProps={shieldProps}\n                                    changeShield={shieldOnOff} />\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            <div className={styles.sp_pageFooter} >\n                Footer\n            </div>\n        </div>\n    );\n};\n\nexport default SpaceShipPage;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
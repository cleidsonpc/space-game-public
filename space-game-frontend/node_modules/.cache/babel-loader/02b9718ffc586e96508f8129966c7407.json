{"ast":null,"code":"var _jsxFileName = \"/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelButtons/PanelButtons.tsx\";\nimport React from \"react\";\nimport styles from \"./PanelButtons.module.css\";\nimport InputCheckbox from \"../InputCheckbox/InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PanelButtons = _ref => {\n  let {\n    engineProps,\n    powerPlantProps,\n    shieldProps,\n    changeEngine,\n    changePowerPlant,\n    changeShield\n  } = _ref;\n\n  const shieldOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    }\n\n    if (param) {\n      shieldProps.capacity = 100;\n    } else {\n      shieldProps.capacity = 0;\n    }\n\n    shieldProps.powerStatus = param;\n    setShieldProps(shieldProps);\n    calcEnergyAvailable();\n    buildLogMessage(\"Shield is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const engineOnOff = param => {\n    if (!powerPlantProps.powerStatus) {\n      param = false;\n    }\n\n    engineProps.powerStatus = param;\n    setEngineProps(engineProps);\n    calcEngineEnergyAvailable();\n    buildLogMessage(\"Engine is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  const powerPlantOnOff = param => {\n    powerPlantProps.powerStatus = param;\n\n    if (!param) {\n      engineOnOff(false);\n      shieldOnOff(false);\n    }\n\n    if (param) {\n      powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n    } else {\n      powerPlantProps.energyAvailable = 0;\n    }\n\n    setPowerPlantProps(powerPlantProps);\n    buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pb_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pb_leftContainer,\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pb_rightContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pb_switch,\n        children: /*#__PURE__*/_jsxDEV(InputCheckbox, {\n          checked: powerPlantProps.powerStatus,\n          onChange: changePowerPlant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pb_switch,\n        children: /*#__PURE__*/_jsxDEV(InputCheckbox, {\n          checked: engineProps.powerStatus,\n          onChange: changeEngine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pb_switch,\n        children: /*#__PURE__*/_jsxDEV(InputCheckbox, {\n          checked: shieldProps.powerStatus,\n          onChange: changeShield\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PanelButtons;\nexport default PanelButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"PanelButtons\");","map":{"version":3,"sources":["/home/cleidson/_dev/projects/space-game/space-game-frontend/src/components/SpaceShipParts/PanelButtons/PanelButtons.tsx"],"names":["React","styles","InputCheckbox","PanelButtons","engineProps","powerPlantProps","shieldProps","changeEngine","changePowerPlant","changeShield","shieldOnOff","param","powerStatus","capacity","setShieldProps","calcEnergyAvailable","buildLogMessage","engineOnOff","setEngineProps","calcEngineEnergyAvailable","powerPlantOnOff","energyAvailable","PowerPlantInitialProps","energyMax","setPowerPlantProps","pb_container","pb_leftContainer","pb_rightContainer","pb_switch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"./PanelButtons.module.css\";\n\nimport InputCheckbox from \"../InputCheckbox/InputCheckbox\";\nimport { EngineProps } from \"../../../model/Engine\";\nimport { PowerPlantProps } from \"../../../model/PowerPlant\";\nimport { ShieldProps } from \"../../../model/Shield\";\n\ntype Props = {\n    engineProps: EngineProps,\n    powerPlantProps: PowerPlantProps,\n    shieldProps: ShieldProps\n}\n\nconst PanelButtons: React.FC<Props> = ({engineProps, powerPlantProps, shieldProps, changeEngine, changePowerPlant, changeShield}) => {\n\n    const shieldOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n        if(param) {\n            shieldProps.capacity = 100;\n        } else {\n            shieldProps.capacity = 0;\n        }\n        shieldProps.powerStatus = param;\n        setShieldProps(shieldProps);\n        calcEnergyAvailable();\n        buildLogMessage(\"Shield is: \" + (param?\"ON\":\"OFF\"));\n    }\n    const engineOnOff = (param:boolean) => {\n        if(!powerPlantProps.powerStatus) {\n            param = false;\n        }\n        engineProps.powerStatus = param;\n        setEngineProps(engineProps);\n        calcEngineEnergyAvailable();\n        buildLogMessage(\"Engine is: \" + (param?\"ON\":\"OFF\"));\n    }\n    const powerPlantOnOff = (param:boolean) => {\n        powerPlantProps.powerStatus = param;\n\n        if(!param) {\n            engineOnOff(false);\n            shieldOnOff(false);\n        }\n        if(param) {\n            powerPlantProps.energyAvailable = PowerPlantInitialProps.energyMax;\n        } else {\n            powerPlantProps.energyAvailable = 0;\n        }\n        setPowerPlantProps(powerPlantProps);\n        buildLogMessage(\"Power Plant is: \" + (param ? \"ON\" : \"OFF\"));\n    }\n\n    return(\n        <div className={styles.pb_container} >\n            <div className={styles.pb_leftContainer} >...</div>\n\n            <div className={styles.pb_rightContainer} >\n                <div className={styles.pb_switch} >\n                    <InputCheckbox checked={powerPlantProps.powerStatus} onChange={changePowerPlant}/>\n                </div>\n\n                <div className={styles.pb_switch} >\n                    <InputCheckbox checked={engineProps.powerStatus} onChange={changeEngine} />\n                </div>\n\n                <div className={styles.pb_switch} >\n                    <InputCheckbox checked={shieldProps.powerStatus} onChange={changeShield} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PanelButtons;\n"]},"metadata":{},"sourceType":"module"}